name: CI/CD Pipeline

on:
  push:
    tags:
      - v*

jobs:
  build-backend:
    runs-on: ubuntu-latest
    if: startsWith(github.ref_name, 'v')
    # github.ref_name == 'norhan-updates'

    steps:
      - name: Checkout Initial Branch
        uses: actions/checkout@v4
        # with:
        #   ref: CI-CD-pipline

      # - name: Switch to Backend Branch
      #   run: |
      #     git fetch origin
      #     git checkout CI-CD-pipline  
        #  main-backend
      - name: Debug ref_name
        run: echo "The ref name is ${{ github.ref_name }}"


      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN}}

      - name: Extract the latest Git tag
        run: |
          echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo $TAG

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: noraali/backend:${{ env.TAG }}
          context: . 
          file: ./Dockerfile 
          

  build-frontend:
    runs-on: ubuntu-latest
    if: startsWith(github.ref_name, 'v')
    #if:github.ref_name == 'CI-CD-pipline'
    
    steps:
      - name: Checkout Initial Branch
        uses: actions/checkout@v4
        # with:
        #   ref: CI-CD-pipline

      # - name: Switch to frontend Branch
      #   run: |
      #     git fetch origin
      #     git checkout CI-CD-pipline
        # main-frontend

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN}}

      - name: Extract the latest Git tag
        run: echo "TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Build and Push frontend Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: noraali/frontend:${{ env.TAG }}
          context: ./frontend
          file: ./frontend/Dockerfile

  run-docker-compose:        
    runs-on: ubuntu-latest
    needs:
      - build-backend
      - build-frontend

    steps:
      - name: Set up environment variables
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "TAG=$TAG" > .env


          

  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Install Docker Compose
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y docker-compose
          
  #     - name: Get the latest Git tag
  #       run: |
  #         TAG=$(git describe --tags --abbrev=0)
  #         echo "TAG=$TAG" > .env

  #     - name: Build and run with Docker Compose
  #       run: |
  #         docker-compose  --env-file .env -f ./docker-compose.yml  --profile prod up






# branches:
#   - CI-CD-pipline
#   - main-backend
#   - main-frontend



